/// <reference types="node" />
/// <reference types="node" />
import { EventEmitter } from 'events';
import StatesetResource from './StatesetResource';
interface ApiConfig {
    host: string;
    port: string;
    protocol: string;
    basePath: string;
    version: string;
    timeout: number;
    maxNetworkRetries: number;
    httpClient: any;
    [key: string]: any;
}
declare class Stateset extends EventEmitter {
    private static DEFAULT_HOST;
    private static DEFAULT_PORT;
    private static DEFAULT_BASE_PATH;
    private static DEFAULT_API_VERSION;
    private static DEFAULT_TIMEOUT;
    private static MAX_NETWORK_RETRY_DELAY_SEC;
    private static INITIAL_NETWORK_RETRY_DELAY_SEC;
    private static DEFAULT_MAX_NETWORK_RETRIES;
    static PACKAGE_VERSION: string;
    static USER_AGENT: {
        bindings_version: string;
        lang: string;
        lang_version: string;
        platform: NodeJS.Platform;
        publisher: string;
        uname: null;
    };
    static USER_AGENT_SERIALIZED: null;
    private _api;
    private _emitter;
    private _enableTelemetry;
    private _props;
    accounts: StatesetResource;
    addresses: StatesetResource;
    agreements: StatesetResource;
    approvals: StatesetResource;
    billOfMaterialItems: StatesetResource;
    billOfMaterials: StatesetResource;
    cases: StatesetResource;
    contacts: StatesetResource;
    customers: StatesetResource;
    inventoryItems: StatesetResource;
    invoices: StatesetResource;
    leads: StatesetResource;
    manufactureOrders: StatesetResource;
    messages: StatesetResource;
    orders: StatesetResource;
    packingListItems: StatesetResource;
    packingLists: StatesetResource;
    payments: StatesetResource;
    picks: StatesetResource;
    proposalItems: StatesetResource;
    proposals: StatesetResource;
    purchaseOrderItems: StatesetResource;
    purchaseOrders: StatesetResource;
    returnItems: StatesetResource;
    returns: StatesetResource;
    shipmentItems: StatesetResource;
    shipments: StatesetResource;
    transactions: StatesetResource;
    warehouses: StatesetResource;
    warranties: StatesetResource;
    workOrderItems: StatesetResource;
    workOrders: StatesetResource;
    constructor(token?: string);
    setHost(host: string, port?: string, protocol?: string): void;
    setProtocol(protocol: string): void;
    setPort(port: string): void;
    setApiVersion(version: string): void;
    setToken(token?: string): void;
    setTimeout(timeout: number): void;
    setMaxNetworkRetries(maxNetworkRetries: number): void;
    setEnableTelemetry(enableTelemetry: boolean): void;
    getTelemetryEnabled(): boolean;
    getApiField(key: keyof ApiConfig): any;
    setApiField(key: keyof ApiConfig, value: any): void;
    getConstant(c: string): any;
    getClientUserAgent(cb: (userAgent: string) => void): void;
    getClientUserAgentSeeded(seed: any, cb: (userAgent: string) => void): void;
    private _setApiField;
    private _prepResources;
    private static createDefaultHttpClient;
}
export = Stateset;
